-- https://github.com/neovim/nvim-lspconfig
-- https://github.com/neovim/nvim-lspconfig/issues/3494
-- https://cmp.saghen.dev/installation
return {
	'neovim/nvim-lspconfig',
	enabled = false,
	opts = {
		-- When we get an error on save like:
		--   [LSP] Format request failed, no matching language servers.
		--   method textDocument/codeAction is not supported by any of the servers registered for the current buffer
		-- We need to check https://github.com/neovim/nvim-lspconfig/blob/master/doc/configs.md and configure the language server.
		servers = {
			gopls = {
				on_attach = function(client, bufnr)
					if vim.bo[bufnr].filetype == "gomod" then
						-- As of 2025-03, it's unusable.
						client.stop()
					end
				end,
				settings = {
					gopls = {
						analyses = { unusedparams = true, },
						staticcheck = true,
						gofumpt = true,
					},
				},
			},
			-- lspconfig.grammarly.setup({})
			lua_ls = {
				settings = {
					Lua = {
						runtime = { version = 'LuaJIT', },
						workspace = { library = vim.api.nvim_get_runtime_file("", true), },
					},
				},
			},
			marksman = {},
			pyright = {},
			sourcekit = {
				capabilities = {
					workspace = {
						didChangeWatchedFiles = {
							dynamicRegistration = true,
						},
					},
				},
			},
		},
	},
	-- TODO: Only when blink.cmp is enabled.
	-- dependencies = { 'saghen/blink.cmp' },
	config = function(_, opts)
		local lspconfig = require('lspconfig')
		for server, config in pairs(opts.servers) do
			-- passing config.capabilities to blink.cmp merges with the capabilities in your
			-- `opts[server].capabilities, if you've defined it
			-- config.capabilities = require('blink.cmp').get_lsp_capabilities(config.capabilities)
			lspconfig[server].setup(config)
		end
	end,
}
