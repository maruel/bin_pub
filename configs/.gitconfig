[color]
	ui = auto
[core]
	autocrlf = false
	excludesfile = "~/.gitexcludes"
[alias]
	st = status
	ci = commit
	br = branch
        graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
	bd = branch -D
	sr = svn rebase
        alias = "!sh -c '[ $# = 2 ] && git config --global alias.\"$1\" \"$2\" && exit 0 || echo \"usage: git alias <new alias> <original command>\" >&2 && exit 1' -"
	co = checkout
	ignored = "!cd \"$(git rev-parse --show-cdup)\" && git clean -n -d | cut -c 14- | sed -e \"s/\\/$//\""
        ignoreall = "!cd \"$(git rev-parse --show-cdup)\" && git clean -n -d | cut -c 14- | sed -e \"s/\\/$//\" >> .git/info/exclude"
	which = !cat $(git rev-parse --git-dir)/description
	confused = log --graph --decorate --pretty=format:\"%Cgreen%d %Cred%ar %Creset%s\" --branches
	upstream = !git rev-parse @{upstream} 2>/dev/null | git rev-parse origin/trunk 2>/dev/null | git rev-parse trunk 2>/dev/null
	ancestor = !git merge-base HEAD $(git upstream)
	reroll = !git rebase -i $(git ancestor)
	compact-log = !git log --pretty=format:\"%B\" $(git ancestor)..HEAD
	squash = "!OLDLOG=$(git compact-log); git reset --soft $(git ancestor) && git commit -m \"$OLDLOG\""
;        ignoreall = "ignored >> .git/info/exclude"
[push]
	default = matching
[mergetool "autodiff"]
	cmd = autodiff $BASE $LOCAL $REMOTE $MERGED
[merge]
	tool = autodiff
[gui]
	pruneduringfetch = true
[receive]
	denyCurrentBranch = warn
[difftool "autodiff"]
	cmd = autodiff $LOCAL $REMOTE
[diff]
	tool = autodiff
