#!/usr/bin/env python3
# Copyright 2016 Marc-Antoine Ruel. All Rights Reserved. Use of this
# source code is governed by a BSD-style license that can be found in the
# LICENSE file.

import os
import re
import subprocess
import sys


STATS = re.compile(
    r'\s*(?P<files>\d+) files? changed(?:, (?P<insertions>\d+) insertions?\(\+\)|)'
    r'(?:, (?P<deletions>\d+) deletions?\(\-\)|)')


def run(*args):
  return subprocess.check_output(*args).decode('utf-8').rstrip()


def main():
  branches = [
      l[2:] for l in run(['git', 'branch', '--no-color']).splitlines()
      if not l[2:].startswith('(HEAD detached at')
  ]
  stats = []
  for branch in branches:
    try:
      l = run([
        'git', '-c', 'diff.renameLimit=5000',
        'diff', '--shortstat', 'origin/HEAD..%s' % branch])
    except:
      print('If origin/HEAD doesn\'t exist, run: git remote set-head origin -a')
      return 1
    if not l:
      stats.append((branch, {'files': '', 'insertions': '', 'deletions': ''}))
    else:
      m = STATS.match(l)
      if m:
        stats.append((branch, m.groupdict('')))
      else:
        print('Unexpected output: %s' % l)
        return 1
  maxlen0 = max(len(i[0]) for i in stats)
  maxlen1 = max(len(i[1]['files']) for i in stats)
  maxlen2 = max(len(i[1]['insertions']) for i in stats)
  maxlen3 = max(len(i[1]['deletions']) for i in stats)
  for line in stats:
    if line[1]['files']:
      print('%*s: %*s files, lines:  %*s  %*s' % (
        maxlen0, line[0], maxlen1, line[1]['files'],
        maxlen2+1, '+'+line[1]['insertions'] if line[1]['insertions'] else '',
        maxlen3+1, '-'+line[1]['deletions'] if line[1]['deletions'] else ''))
    else:
      print('%*s: <no diff>' % (maxlen0, line[0]))
  return 0


if __name__ == '__main__':
  sys.exit(main())
