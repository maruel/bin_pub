#!/usr/bin/env python
# Copyright 2016 Marc-Antoine Ruel. All Rights Reserved. Use of this
# source code is governed by a BSD-style license that can be found in the
# LICENSE file.

import os
import re
import subprocess
import sys


STATS = re.compile(
    r'(?P<files>\d+) files? changed(?:, (?P<insertions>\d+) insertions?\(\+\)|)'
    r'(?:, (?P<deletions>\d+) deletions?\(\-\)|)')


def main():
  branches = [
    l[2:] for l in subprocess.check_output(['git', 'branch']).splitlines()
  ]
  stats = []
  for branch in branches:
    l = subprocess.check_output(
        ['git', 'diff', '--shortstat', 'origin/master..%s' % branch]).strip()
    m = STATS.match(l)
    if m:
      stats.append((branch, m.groupdict('')))
    else:
      stats.append((branch, {'files': '', 'insertions': '', 'deletions': ''}))
  maxlen0 = max(len(i[0]) for i in stats)
  maxlen1 = max(len(i[1]['files']) for i in stats)
  maxlen2 = max(len(i[1]['insertions']) for i in stats)
  maxlen3 = max(len(i[1]['deletions']) for i in stats)
  for line in stats:
    if line[1]['files']:
      print('%*s: %*s files, lines:  %*s  %*s' % (
        maxlen0, line[0], maxlen1, line[1]['files'],
        maxlen2+1, '+'+line[1]['insertions'] if line[1]['insertions'] else '',
        maxlen3+1, '-'+line[1]['deletions'] if line[1]['deletions'] else ''))
    else:
      print('%*s:' % (maxlen0, line[0]))
  return 0


if __name__ == '__main__':
  sys.exit(main())
